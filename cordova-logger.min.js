!function(e){let o=["debug","info","warn","error"],r=0,t=require("./deepcopy"),n=e._cordovaNative&&-1!==navigator.userAgent.toLowerCase().indexOf("android");function i(e){r++;let o="";try{const t=Object.prototype.toString.call(e);switch(t){case"[object Number]":case"[object String]":case"[object Undefined]":case"[object Null]":case"[object Boolean]":o=e;break;case"[object Object]":case"[object Array]":for(let o in e)try{e.hasOwnProperty&&e.hasOwnProperty(o)?e[o]=r>999?Object.prototype.toString.call(e[o]):i(e[o]):e[o]=Object.prototype.toString.call(e[o])}catch(r){e[o]=t}o=e;break;case"[object Function]":console.warn("we don't recommend to print function directly"),o=Function.prototype.toString.call(e);break;case"[object Error]":o=e.stack||e.toString();break;case"[object Symbol]":console.warn("we don't recommend to print Symbol directly"),o=e.toString();break;case"[object Set]":console.warn("we don't recommend to print Set directly"),o=[...e];break;case"[object Map]":console.warn("we don't recommend to print Map directly");const n={};for(let[o,r]of e)n[o]=r;o=n;break;default:o=Object.prototype.toString.call(e)}}catch(e){o={}}return o}function l(l){if(void 0===l||"[object Object]"===Object.prototype.toString.call(l))return e.userConfig=l||{},e.userConfig.folder="string"==typeof e.userConfig.folder?e.userConfig.folder:"cordova-logger",e.userConfig.column="string"==typeof e.userConfig.column?e.userConfig.column:"log",e.userConfig.filename="string"==typeof e.userConfig.filename?e.userConfig.filename:"logger.log",e.logger={userConfig:e.userConfig,queue:[]},o.forEach(o=>{e.logger[o]=((l="",...u)=>{const f=[l,...u];if("debug"===o)return console.log(`[${g()}] [DEBUG]`,l,...u),Promise.resolve(...f);if(r=0,console[o](`[${g()}] [${o.toUpperCase()}] `,l," [ext]",...u),n){const{folder:r,column:n,filename:f}=e.userConfig;l=JSON.stringify(l,function(e,o){return i(o)},4);let d=[];u.length&&(d=u.map(e=>(function(e){try{const o=t(e);return JSON.stringify(o,function(e,o){return i(o)},4)}catch(o){return Object.prototype.toString.call(e)}})(e))).length&&(d=`  [ext] ${d.join("")}`);const p=`${l}`+`${d}`+"\r\n",y=`[${g()}] [${o.toUpperCase()}] ${p}`;return e.logger.queue.length?e.logger.queue.push(y):(e.logger.queue.push(y),function o(r="",t,n,i){if(!e.requestFileSystem&&!e.LocalFileSystem)throw new Error("^^^^^^^^cordova-logger: please install cordova-plugin-file first");return new Promise(async function(l){return e.requestFileSystem(e.LocalFileSystem.PERSISTENT,0,function(g){g.root.getDirectory(t,{create:!0},function(a){a.getDirectory(n,{create:!0},function(s){s.getFile(i,{create:!0,exclusive:!1},function(c){c.createWriter(async function(c){c.onwriteend=function(){if(l(r),e.logger.queue.shift(),e.logger.queue.length)return o(e.logger.queue.slice(0,1)[0],t,n,i)},c.onerror=function(r){if(console.error("cordova-logger: write file fail",r),l(r),e.logger.queue.shift(),e.logger.queue.length)return o(e.logger.queue.slice(0,1)[0],t,n,i)},c.seek(c.length),c.write(r)})},c)},s)},a)},a)}).catch(r=>{if(console.error("cordova-logger createAndWriteFile pronmise err",r),e.logger.queue.shift(),e.logger.queue.length)return o(e.logger.queue.slice(0,1),t,n,i)})}(y,r,n,f))}return console.log(`[${g()}] [${o.toUpperCase()}]`,l,...u),Promise.resolve(...f)})}),e.logger;throw new Error("^^^^^^^^cordova-logger config must be an object")}function c(e){throw console.error("cordova-logger: file folder create fail!",e),new Error("^^^^^^^^cordova-logger: file folder create fail"+e)}function s(e){throw console.error("cordova-logger: file system load error!",e),new Error("^^^^^^^^cordova-logger: file system load error!"+e)}function a(e){throw console.error("cordova-logger: file folder create fail!",e),new Error("^^^^^^^^cordova-logger: file folder create fail"+e)}function s(e){throw console.error("cordova-logger: file system load fail!",e),new Error("^^^^^^^^cordova-logger: file system load fail!"+e)}function g(){let e=(new Date).getFullYear(),o=(new Date).getMonth()+1,r=(new Date).getDate(),t=(new Date).getHours(),n=(new Date).getMinutes(),i=(new Date).getSeconds(),l=(new Date).getMilliseconds();return t<10&&(t="0"+t),n<10&&(n="0"+n),i<10&&(i="0"+i),l<10&&(l="00"+l),l<100&&(l="0"+l),`${e}-${o}-${r} ${t}:${n}:${i}.${l}`}l.prototype.checkFileWritePriority=function(){if(!e.permissions)throw new Error("^^^^^^^^cordova-logger: please install cordova-plugin-android-permissions first");return new Promise(o=>{n?e.permissions.checkPermission(permissions.WRITE_EXTERNAL_STORAGE,function(e){e.hasPermission?o(!0):o(!1)}):o(!0)})},l.prototype.requestFileWritePriority=function(o,r,t){if(!e.requestFileSystem&&!e.LocalFileSystem)throw new Error("^^^^^^^^cordova-logger: please install cordova-plugin-file first");return new Promise(i=>{n?e.requestFileSystem(e.LocalFileSystem.PERSISTENT,0,function(e){e.root.getDirectory(o,{create:!0},function(e){e.getDirectory(r,{create:!0},function(e){e.getFile(t,{create:!0,exclusive:!1},function(e){i()},function(e){i()})})})}):i()})},l.prototype.checkExternalFileExistOrNot=function(o){if(!e.requestFileSystem&&!e.LocalFileSystem)throw new Error("^^^^^^^^cordova-logger: please install cordova-plugin-file first");return new Promise(r=>{e.resolveLocalFileSystemURL(e.cordova.file.externalApplicationStorageDirectory,function(e){e.getFile(o,{create:!1,exclusive:!0},function(e){r(!0)},function(e){r(!1)})})})},module.exports=l}(self);
